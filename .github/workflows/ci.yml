name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    name: Validate Files
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Check Python syntax
      run: |
        # Compile only .py files, skip shell scripts
        find dags -name "*.py" -exec python -m py_compile {} \;
        find scrapers -name "*.py" -exec python -m py_compile {} \;
        find scripts -name "*.py" -exec python -m py_compile {} \;
        echo "✓ Python syntax check passed"

    - name: Validate YAML files
      run: |
        pip install pyyaml
        python -c "import yaml; yaml.safe_load(open('config/scraper_config.yaml'))" && echo "✓ scraper_config.yaml is valid"
        python -c "import yaml; yaml.safe_load(open('docker-compose.yml'))" && echo "✓ docker-compose.yml is valid"

    - name: Check required files exist
      run: |
        test -f Dockerfile && echo "✓ Dockerfile exists"
        test -f docker-compose.yml && echo "✓ docker-compose.yml exists"
        test -f requirements.txt && echo "✓ requirements.txt exists"
        test -f config/scraper_config.yaml && echo "✓ config exists"
        test -f sql/init.sql && echo "✓ SQL files exist"

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: validate

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -f Dockerfile -t french-jobs-scraper:ci .

    - name: Test Docker image
      run: |
        docker run --rm french-jobs-scraper:ci python --version
        docker run --rm french-jobs-scraper:ci airflow version || echo "Airflow test skipped"

    - name: Validate docker-compose
      run: |
        docker-compose config > /dev/null && echo "✓ docker-compose.yml is valid"
